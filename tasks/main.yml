---
# tasks file for gerrit

- name: Include distribution specific variables
  include_vars: "{{ ansible_distribution }}.yml"
  tags: gerrit

- include: CentOS.yml
  when: ansible_distribution == "CentOS"
  tags: gerrit

- include: Ubuntu.yml
  when: ansible_distribution == "Ubuntu"
  tags: gerrit

- include: postgresql.yml
  when: gerrit_database_type == "postgresql"
  tags:
    - gerrit
    - postgresql

- name: Create Gerrit installation directory
  file: >
    path=/opt/gerrit
    owner=root
    group=root
    mode=0755
    state=directory
  tags: gerrit

- name: Download Gerrit
  get_url: >
    url={{ gerrit_download_server }}/gerrit-{{ gerrit_version }}.war
    dest=/opt/gerrit/gerrit-{{ gerrit_version }}.war
    sha256sum={{ gerrit_sha256sum }}
  when: not gerrit_download_maven
  tags: gerrit

- name: Download Gerrit from Maven Repo
  get_url: >
    url={{ gerrit_download_server }}/com/google/gerrit/gerrit-war/{{ gerrit_version }}/gerrit-war-{{ gerrit_version }}.war
    dest=/opt/gerrit/gerrit-{{ gerrit_version }}.war
    sha256sum={{ gerrit_sha256sum }}
  when: gerrit_download_maven
  tags: gerrit

- name: Create Gerrit symlink
  file: >
    src=/opt/gerrit/gerrit-{{ gerrit_version }}.war
    dest=/opt/gerrit/gerrit.war
    owner=root
    group=root
    state=link
  tags: gerrit

- name: Create Gerrit group
  group: >
    name={{ gerrit_group }}
    system=yes
    state=present
  tags: gerrit

- name: Create Gerrit user
  user: >
    name={{ gerrit_user }}
    comment='Gerrit user'
    home={{ gerrit_site_dir }}
    group={{ gerrit_group }}
    system=yes
    state=present
  tags: gerrit

- name: Create Gerrit site directory
  file: >
    path={{ gerrit_site_dir }}
    owner={{ gerrit_user }}
    group={{ gerrit_group }}
    mode=0755
    state=directory
  tags: gerrit

- name: Create Gerrit etc directory
  file: >
    path={{ gerrit_site_dir }}/etc
    owner={{ gerrit_user }}
    group={{ gerrit_group }}
    mode=0755
    state=directory
  tags: gerrit

- name: Create Gerrit tmp directory
  file: >
    path={{ gerrit_site_dir }}/tmp
    owner={{ gerrit_user }}
    group={{ gerrit_group }}
    mode=0755
    state=directory
  tags: gerrit

- name: Create temporary Gerrit configuration file
  template: >
    src=gerrit.config.j2
    dest={{ gerrit_site_dir }}/tmp/gerrit.config
    owner={{ gerrit_user }}
    group={{ gerrit_group }}
    mode=0644
  changed_when: False
  tags: gerrit

- name: Modify temporary Gerrit configuration file
  ini_file: >
    dest={{ gerrit_site_dir }}/tmp/gerrit.config
    section={{ item.section }}
    option={{ item.option }}
    value={{ item.value }}
    backup=yes
  with_items: '{{ gerrit_extra_config_list }}'
  changed_when: False
  tags: gerrit

- name: Copy Gerrit configuration file
  copy: >
    src={{ gerrit_site_dir }}/tmp/gerrit.config
    dest={{ gerrit_site_dir }}/etc/gerrit.config
    remote_src=yes
  notify: restart gerrit
  tags: gerrit

- name: Create temporary Gerrit secure configuration file
  template: >
    src=secure.config.j2
    dest={{ gerrit_site_dir }}/tmp/secure.config
    owner={{ gerrit_user }}
    group={{ gerrit_group }}
    mode=0600
  changed_when: False
  tags: gerrit

- name: Modify temporary Gerrit secure configuration file
  ini_file: >
    dest={{ gerrit_site_dir }}/tmp/secure.config
    section={{ item.section }}
    option={{ item.option }}
    value={{ item.value }}
    backup=yes
  with_items: '{{ gerrit_extra_secure_config_list }}'
  changed_when: False
  tags: gerrit

- name: Copy Gerrit secure configuration file
  copy: >
    src={{ gerrit_site_dir }}/tmp/secure.config
    dest={{ gerrit_site_dir }}/etc/secure.config
    remote_src=yes
  notify: restart gerrit
  tags: gerrit

- name: Set Initialization Options
  set_fact:
    gerrit_init_options: >
      {% for plugin in gerrit_install_plugins %} --install-plugin {{ plugin }} {% endfor %}
  tags: gerrit

- name: Save Initialization Options
  copy:
    content: >
      java -jar /opt/gerrit/gerrit-{{ gerrit_version }}.war init
      --batch
      --no-auto-start
      -d {{ gerrit_site_dir }}
      {{ gerrit_init_options }}
    dest: '{{ gerrit_site_dir }}/tmp/gerrit-init.sh'
    mode: 0755
  register: init_script
  tags: gerrit

- name: Stop Gerrit
  become: yes
  become_user: "{{ gerrit_user }}"
  become_method: sudo
  systemd: state=stopped name=gerrit
  when: init_script.changed
  tags: gerrit

- name: Initialize Gerrit
  become: yes
  become_user: "{{ gerrit_user }}"
  become_method: sudo
  shell: '{{ gerrit_site_dir }}/tmp/gerrit-init.sh'
  register: initialization
  when: init_script.changed
  tags: gerrit

- name: Reindexing Gerrit
  become: yes
  become_user: "{{ gerrit_user }}"
  become_method: sudo
  command: java -jar /opt/gerrit/gerrit.war reindex -d {{ gerrit_site_dir }}
  when: initialization.changed
  tags: gerrit

- name: Create Gerrit defaults file
  template: >
    src=gerritcodereview.j2
    dest=/etc/default/gerritcodereview
    owner=root
    group=root
    mode=0644
  notify: restart gerrit
  tags: gerrit

- name: Delete Gerrit init file link
  file: >
    dest=/etc/init.d/gerrit
    state=absent
  tags: gerrit

- name: Install Gerrit systemd service file
  template: >
    src=gerrit.service.j2
    dest=/etc/systemd/system/{{ gerrit_service_name }}.service
    owner=root
    group=root
    mode=0644
  notify: restart gerrit
  tags: gerrit

- name: Ensure Gerrit service is started and enabled on boot
  systemd: state=started name={{ gerrit_service_name }} enabled=yes
  tags: gerrit
